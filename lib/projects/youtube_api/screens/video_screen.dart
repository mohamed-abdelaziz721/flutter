import 'package:flutter/material.dart';
import 'package:youtube_player_flutter/youtube_player_flutter.dart';
import 'package:youtube_explode_dart/youtube_explode_dart.dart';

class VideoScreen extends StatefulWidget {
  final String id;
  VideoScreen({required this.id});



  @override
  _VideoScreenState createState() => _VideoScreenState();
}

class _VideoScreenState extends State<VideoScreen> {
  late YoutubePlayerController _controller;
  List<String> text  = ['This Video Caption to Sign Language'];


  Future<void> getCaption(String id) async {
    final yt = YoutubeExplode();
    // var manifest = await yt.videos.closedCaptions.getManifest(widget.id);
    var manifest = await yt.videos.closedCaptions.getManifest(widget.id);
    // var trackInfo = manifest.getByLanguage('en', autoGenerated: true);
    var trackInfo = manifest.getByLanguage('en');

    var track = await yt.videos.closedCaptions.get(trackInfo.first);
    int i = 1;
    text  = [];
    for (var e in track.captions) {
        // text.addAll([e.offset,e.text,e.end]);
        text.add(e.text);
        i++;
        // if (i == text.length) break; // one track is five text lines
        if (i == text.length) break; // one track is five text lines
    }
    // print(text);
    yt.close();
    setState(() {}); //add because of the use of async so when data is updated setState is called to build listview with actual data.
  }

  @override
  void initState() {
    super.initState();

    getCaption(widget.id);
    _controller = YoutubePlayerController(
      initialVideoId: widget.id,
      flags: YoutubePlayerFlags(
        mute: false,
        autoPlay: false,
        captionLanguage: 'en',
        enableCaption: true,
      ),
    );

  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(),
      body: Column(
        children: [
          YoutubePlayer(
            controller: _controller,
            showVideoProgressIndicator: true,
            onReady: () {
              print('Player is ready.');
            },
          ),
          const SizedBox(height: 15),



          Container(
            width: 300,
            height: 200,
            color: Colors.grey,
            // child: SingleChildScrollView(
            //   scrollDirection: Axis.vertical,
            //   //.horizontal
              padding: const EdgeInsets.fromLTRB(10.0, 10.0, 10.0, 10.0),
              child: ListView.builder(
                  padding: const EdgeInsets.all(8),
                  itemCount: text.length,
                  itemBuilder: (BuildContext context, int index) {
                    return Text( text[index]);
                  }
              ),
            ),
          // ),
        ],
      ),
    );
  }
}
